---

- name: "ox_connector | Install OX connector"
  block:
    - name: "ox_connector | Create DNS Alias"
      ansible.builtin.command: |
        udm dns/alias create
          --superordinate "zoneName={{ ox_connector_domain_name }},cn=dns,{{ ox_connector_basedn }}"
          --set name={{ ox_connector_soap_prefix }}
          --set cname={{ ox_connector_domain_prefix }}
          --ignore_exists
      changed_when: "ox_connector_ipmanagedclients.stdout is search('Object created')"
      failed_when:
        - "ox_connector_ipmanagedclients.rc > 0"
        - "'already in use' not in ox_connector_ipmanagedclients.stdout"
      register: "ox_connector_ipmanagedclients"
      when: "ox_connector_domain_prefix|default('')|length > 0"
      tags:
        - "ox_connector_ipmanagedclients"

    - name: "ox_connector | Install ox-connector"
      vars:
        install_packages_app_version_map: "{{ ox_connector_app_version_map }}"
        install_packages_temp_pw_file: "{{ ox_connector_temp_pw_file }}"
        install_packages_install_apps:
          - "ox-connector"
        install_packages_additional_options: >
          DEFAULT_CONTEXT=9999
          OX_SOAP_SERVER=https://{{ ox_connector_soap_prefix }}.{{ ox_connector_domain_name }}
          OX_IMAP_SERVER=imap://127.0.0.1:143
          OX_SMTP_SERVER=smtp://127.0.0.1:26
          OX_MASTER_ADMIN={{ ox_connector_master_admin }}
          OX_MASTER_PASSWORD={{ ox_connector_master_password }}
      ansible.builtin.include_role:
        name: "install_packages"
      no_log: "{{ ox_connector_hide_logging }}"
      tags:
        - "ox_connector_install"

    - name: "ox_connector | Get current settings"
      ansible.builtin.command:
        cmd: "univention-app configure ox-connector --list"
      changed_when: false
      register: "ox_connector_get_current_settings_result"
      tags:
        - "ox_connector_get_current_settings"

    - name: "ox_connector | Check if settings are still correct"
      vars:
        ox_connector_settings_correct: true
      ansible.builtin.set_fact:
        ox_connector_settings_correct: "{{ ox_connector_settings_correct
          if (ox_connector_get_current_settings_result.stdout is search(ox_connector_item)) else false }}"
      loop:
        - "OX_SOAP_SERVER: 'https://{{ ox_connector_soap_prefix }}.{{ ox_connector_domain_name }}'"
        - "OX_MASTER_ADMIN: '{{ ox_connector_master_admin }}'"
        - "OX_MASTER_PASSWORD: '{{ ox_connector_master_password }}'"
      loop_control:
        loop_var: "ox_connector_item"
      no_log: "{{ ox_connector_hide_logging }}"
      tags:
        - "ox_connector_check_settings"

    - name: "ox_connector | Configure settings"
      ansible.builtin.command:
        cmd: >
          univention-app configure ox-connector --set
          OX_SOAP_SERVER=https://{{ ox_connector_soap_prefix }}.{{ ox_connector_domain_name }}
          OX_MASTER_ADMIN={{ ox_connector_master_admin }}
          OX_MASTER_PASSWORD={{ ox_connector_master_password }}
      no_log: "{{ ox_connector_hide_logging }}"
      when: "not ox_connector_settings_correct"
      tags:
        - "ox_connector_configure"

    - name: "ox_connector | Stop slapd"
      ansible.builtin.service:
        name: "slapd"
        state: "stopped"
      changed_when: false
      tags:
        - "ox_connector_stop_slapd"

    - name: "ox_connector | Add oxDisplayName index"
      ansible.builtin.command:
        cmd: "/usr/share/univention-ldap/ldap_setup_index --add-eq oxDisplayName"
      changed_when: "ox_connector_index_oxdisplayname.stdout|length > 0"
      register: "ox_connector_index_oxdisplayname"
      tags:
        - "ox_connector_index_oxdisplayname"

    - name: "ox_connector | Start slapd"
      ansible.builtin.service:
        name: "slapd"
        state: "started"
      changed_when: false
      tags:
        - "ox_connector_start_slapd"

    - name: "ox_connector | Create ox context"
      ansible.builtin.command: >
        udm oxmail/oxcontext create
        --position "cn=open-xchange,{{ ox_connector_basedn }}"
        --set contextid=9999
        --set name=9999
        --ignore_exists
      changed_when: "ox_connector_ox_context.stdout is search('Object created')"
      register: "ox_connector_ox_context"
      tags:
        - "ox_connector_ox_context"

    - name: "ox_connector | Create ox accessprofile"
      ansible.builtin.command: >
        udm oxmail/accessprofile create
        --position "cn=accessprofiles,cn=open-xchange,{{ ox_connector_basedn }}"
        --set name={{ ox_connector_template_name }}
        --set displayName="{{ ox_connector_template_name }}"
        --set calendar=TRUE
        --set collectemailaddresses=TRUE
        --set contacts=TRUE
        --set delegatetask=TRUE
        --set editgroup=TRUE
        --set editpassword=TRUE
        --set editpublicfolders=TRUE
        --set editresource=TRUE
        --set ical=TRUE
        --set multiplemailaccounts=TRUE
        --set readcreatesharedfolders=TRUE
        --set subscription=TRUE
        --set tasks=TRUE
        --set vcard=TRUE
        --set webdav=TRUE
        --set webmail=TRUE
        --ignore_exists
      changed_when: "ox_connector_add_accessprofile.stdout is search('Object created')"
      register: "ox_connector_add_accessprofile"
      tags:
        - "ox_connector_add_accessprofile"

    - name: "ox_connector | Remove existing accessprofiles"
      ansible.builtin.command: >
        udm oxmail/accessprofile remove
        --dn="{{ ox_connector_item }},{{ ox_connector_basedn }}"
        --ignore_not_exists
      loop:
        - "cn=webmail,cn=accessprofiles,cn=open-xchange"
        - "cn=webmail_drive,cn=accessprofiles,cn=open-xchange"
        - "cn=pim,cn=accessprofiles,cn=open-xchange"
        - "cn=pim_drive,cn=accessprofiles,cn=open-xchange"
        - "cn=groupware,cn=accessprofiles,cn=open-xchange"
        - "cn=premium,cn=accessprofiles,cn=open-xchange"
      loop_control:
        loop_var: "ox_connector_item"
      changed_when: "ox_connector_remove_existing_accessprofiles.stdout is search('Object removed')"
      register: "ox_connector_remove_existing_accessprofiles"
      tags:
        - "ox_connector_remove_existing_accessprofiles"

    - name: "ox_connector | Modify usertemplate"
      ansible.builtin.command: >
        udm settings/usertemplate modify
        --dn "cn=open-xchange groupware account,cn=templates,cn=univention,{{ ox_connector_basedn }}"
        --set name="{{ ox_connector_usertemplate_name }}"
        --set oxAccess="{{ ox_connector_template_name }}"
        --ignore_not_exists
      changed_when: "ox_connector_modify_usertemplate.stdout is search('Object modified')"
      failed_when:
        - "ox_connector_modify_usertemplate.rc != 0"
        - "ox_connector_modify_usertemplate.rc == 3 and
            'object not found' not in ox_connector_modify_usertemplate.stdout"
        - "ox_connector_modify_usertemplate.stderr is not search('Already exists')"
      register: "ox_connector_modify_usertemplate"
      tags:
        - "ox_connector_modify_usertemplate"

    - name: "ox_connector | Remove duplicate usertemplate"
      ansible.builtin.command:
        cmd: |
          udm settings/usertemplate remove
          --dn "cn=open-xchange groupware account,cn=templates,cn=univention,{{ ox_connector_basedn }}"
          --ignore_not_exists
      changed_when: "ox_connector_remove_duplicate_usertemplate_result.stdout is search('Object removed')"
      register: "ox_connector_remove_duplicate_usertemplate_result"
      tags:
        - "ox_connector_remove_duplicate_usertemplate"

    - name: "ox_connector | Existence of Usertemplate"
      ansible.builtin.command: "udm settings/usertemplate list"
      register: "ox_connector_usertemplate_exists"

    - name: "ox_connector | Set oxDisplayName in usertemplate"
      when: "ox_connector_usertemplate_name in ox_connector_usertemplate_exists.stdout"
      ansible.builtin.command: >
        udm settings/usertemplate modify
        --dn 'cn={{ ox_connector_usertemplate_name }},cn=templates,cn=univention,{{ ox_connector_basedn }}'
        --set oxDisplayName="<firstname> <lastname> (<username>)"
        --set mailPrimaryAddress=""
        --set e-mail=""
        --set isOxUser="OK"
      changed_when:
        - "ox_connector_modify_usertemplate_set_oxdisplayname_in_user_template.stdout is search('Object modified')"
      register: "ox_connector_modify_usertemplate_set_oxdisplayname_in_user_template"
      tags:
        - "ox_connector_modify_usertemplate_set_oxdisplayname_in_user_template"

    - name: "ox_connector | Disable UDMWeb for User"
      ansible.builtin.command: >
        udm settings/extended_attribute modify \
          --dn "cn=oxContextUser,cn=open-xchange,cn=custom attributes,cn=univention,{{ ox_connector_basedn }}" \
          --set mayChange=0 \
          --set disableUDMWeb=1
      changed_when: "ox_connector_disable_udmweb_user.stdout is search('Object modified')"
      register: "ox_connector_disable_udmweb_user"
      tags:
        - "ox_connector_disable_udmweb_user"

    - name: "ox_connector | Disable UDMWeb for Ressource"
      ansible.builtin.command: >
        udm settings/extended_attribute modify \
          --dn "cn=oxContextResource,cn=open-xchange,cn=custom attributes,cn=univention,{{ ox_connector_basedn }}" \
          --set mayChange=0 \
          --set disableUDMWeb=1
      changed_when: "ox_connector_disable_udmweb_ressource.stdout is search('Object modified')"
      register: "ox_connector_disable_udmweb_ressource"
      tags:
        - "ox_connector_disable_udmweb_ressource"

    - name: "ox_connector | Set oxAccess default template"
      ansible.builtin.command: >
        udm settings/extended_attribute modify \
          --dn "cn=oxAccess,cn=open-xchange,cn=custom attributes,cn=univention,{{ ox_connector_basedn }}" \
          --set default="{{ ox_connector_template_name }}"
      changed_when: "ox_connector_disable_udmweb_user.stdout is search('Object modified')"
      register: "ox_connector_disable_udmweb_user"
      tags:
        - "ox_connector_disable_udmweb_user"

  when: "ox_connector_server_type|default('master') != 'backup'"
  tags:
    - "ox_connector"

- name: "ox_connector | Add default dn to users"
  univention.ucs_modules.univention_config_registry:
    kvlist:
      - key: "directory/manager/web/modules/users/user/add/default"
        value: "cn={{ ox_connector_usertemplate_name }},cn=templates,cn=univention,{{ ox_connector_basedn }}"
  tags:
    - "ox_connector_default_dn"

...
