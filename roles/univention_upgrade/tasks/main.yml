---
# tasks file for univention_upgrade

- name: "univention_upgrade | Allow modified apache templates"
  univention.ucs_modules.univention_config_registry:
    keys:
      update44/ignore_apache_template_checks: "yes"
    state: "present"
  check_mode: false
  tags:
    - "univention_upgrade"
    - "univention_upgrade_ignore_apache_template_check"

- name: "univention_upgrade | Clean apt package cache"
  ansible.builtin.command:
    cmd: "apt clean"
    warn: false
  changed_when: false
  when: "univention_upgrade_clear_apt_cache"
  tags:
    - "univention_upgrade"
    - "univention_upgrade_clean_package_cache"

- name: "univention_upgrade | Check for upgrade"
  ansible.builtin.command: >
    univention-upgrade
    --check
    --setucr
    --updateto={{ univention_upgrade_version }}
    {% if not univention_upgrade_app_updates %}
    --disable-app-updates
    {% endif %}
  changed_when: false
  register: "univention_upgrade_upgrade_check"
  failed_when:
    - "univention_upgrade_upgrade_check.rc > 0"
    - "univention_upgrade_upgrade_check.stderr is not search('update to UCS 5.0 is blocked')"
    - "univention_upgrade_upgrade_check.stdout is not search('but updater has been instructed to stop')"
    - "univention_upgrade_upgrade_check.stdout is not search('No update available.')"
  tags:
    - "univention_upgrade"
    - "univention_upgrade_upgrade_check"

- name: "univention_upgrade | Check if packages should be removed"
  ansible.builtin.expect:
    responses:
      "Do you want to continue [Y|n]?": "n"
    command: |
      univention-upgrade
      --ignoressh
      --ignoreterm
      {% if not univention_upgrade_app_updates %}
      --disable-app-updates
      {% endif %}
      --updateto={{ univention_upgrade_version }}
  changed_when: false
  failed_when: "univention_upgrade_deep_inspect_upgrade_check.stdout is search('REMOVED')"
  register: "univention_upgrade_deep_inspect_upgrade_check"
  when: "univention_upgrade_removal_check|bool"
  tags:
    - "univention_upgrade"
    - "univention_upgrade_deep_inspect"

- name: "univention_upgrade | Do univention-upgrade"
  ansible.builtin.command: >
    univention-upgrade
    --ignoressh
    --ignoreterm
    --noninteractive
    {% if not univention_upgrade_app_updates %}
    --disable-app-updates
    {% endif %}
    --updateto={{ univention_upgrade_version }}
  check_mode: false
  delay: 10
  retries: 3
  when: "univention_upgrade_upgrade_check.stdout is not search('No update available')"
  tags:
    - "univention_upgrade"
    - "univention_upgrade_run"

- name: "univention_upgrade | Reboot after upgrade"
  ansible.builtin.reboot:
  changed_when: false
  # noqa ignore-errors
  ignore_errors: true
  when:
    - "univention_upgrade_upgrade_check.stdout is not search('No update available')"
    - "univention_upgrade_reboot_after_upgrade|bool"
  tags:
    - "univention_upgrade"
    - "univention_upgrade_reboot"
